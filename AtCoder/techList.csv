入力、出力
代入、単純な四則演算処理,abc001a,abc004a
条件分岐（if 文など）,abc001b,abc001c,abc002a
繰り返し処理（for 文など）,abc001c,abc003a,abc004b
文字列（string）,abc002b,abc003b,arc001a
浮動小数点（double 型など）
配列（二次元配列も含む）,arc001a

アルゴリズムとは何か
計算量（計算回数）とは何か

本当に全通り調べ上げる「全探索」
工夫して探索の通り数を減らす「全探索」,abc004d
ビット全探索,abc002d
順列全探索

abs
sin/cos/tan
string
min/max
swap
__gcd
rand
clock
reverse
sort
vector
stack
queue
priority_queue
map
lower_bound
set
pair
tuple
assert
count
find
next_permutation
__builtin_popcount
bitset

二分探索
深さ優先探索（DFS）,arc001c
幅優先探索（BFS）,arc001b
動的計画法（bitDP などを含む）
ダイクストラ法（最短経路問題）
ワーシャルフロイド法（最短経路問題）
クラスカル法（最小全域木問題）
高速な素数判定法
べき乗を高速に計算するアルゴリズム,abc003d
逆元を計算するアルゴリズム,abc003d
累積和,abc001d

グラフ（グラフ理論）
木
Union-Find

			
座標圧縮
半分全列挙
行列累乗
ダブリング
Grundy数
Rolling Hash
平方分割
最大流
最小カット
二部グラフ判定
二部マッチング

Binary Indexed Tree (BIT)
セグメント木（※遅延評価セグメント木を含む）

数学的考察,abc003c,abc004c

包除原理,abc003d
三角形面積,abc002c