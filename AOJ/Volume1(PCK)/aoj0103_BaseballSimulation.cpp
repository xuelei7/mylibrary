// 野球シミュレーション
// 野球の好きな一郎くんは、試合の経過にしたがって発生したイベントを入力すると、そのイニングの得点を表示する野球シミュレーションを作成することにしました。発生するイベントをシングルヒット、ホームラン、アウトの 3 種類に絞り、次の通りに考えることにしました。

// シングルヒット

// 新たに 1 塁に走者が出ます。
// 1 塁にいた走者は 2 塁に、2 塁にいた走者は 3 塁に進みます。
// 3 塁に走者がいた場合、その走者は本塁にかえり塁上から消えます。
// そして、得点に 1 点が加算されます。
// ホームラン

// 塁上にいた走者すべてが本塁にかえり塁上から消えます。
// 塁上にいた走者の数 +1 が得点に加算されます。
// アウト

// アウトカウントが 1 つ加算されます。
// 塁上の走者の状態と得点は変化しません。
// アウトカウントが 3 つになった時点でイニングは終了します。
// 一郎くんはこれらの発生したイベントをそれぞれ HIT、HOMERUN、OUT で表すことにしました。

// 野球の試合経過を表すイベントデータを読み込み、そのイニングに入った得点を出力するプログラムを作成してください。

// Input
// 複数のデータセットが与えられます。最初の行にデータセット数 n (n ≤ 50) が与えられます。各データセットとして、１イニングに発生したイベントを表す文字列（HIT、HOMERUN、または OUT）の列が与えられます。１行に１つのイベントが与えられます。イベントの数は 100 を超えません。

// Output
// 各データセットについてそのイニングに入った得点を１行に出力してください。

#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    while (n--) {
        string s;
        int score = 0;
        int outcount = 0;
        int base[4] = {};
        while (cin >> s) {
            if (s == "OUT") {
                outcount++;
                if (outcount == 3) break;
            } else if (s == "HIT") {
                score += base[3];
                base[3] = base[2];
                base[2] = base[1];
                base[1] = 1;
            } else {
                score += base[3] + base[2] + base[1] + 1;
                base[3] = base[2] = base[1] = 0;
            }

        }
        cout << score << endl;
    }
    return 0;
}