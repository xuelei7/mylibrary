// そばの割引
// 会津はおいしいそばの産地です。おいしいそば粉が簡単に手に入るので、そば粉を買って自宅でそばを打つ人も少なくありません。あなたも休日にそば打ちを楽しんでいる一人です。

// ある日、あなたは近くにある A 店、 B 店、 C 店にそば粉を買いに行きました。それぞれの店での 1 袋あたりの量、単価は下表に示すようになっています。また、まとめて買うと割引かれます。

// A店	B店	C店
// 1 袋あたりの量	200g	300g	500g
// 1 袋の単価(定価)	380円	550円	850円
// 割引が適用される単位	5袋毎	4袋毎	3袋毎
// 割引率	20%引き	15%引き	12%引き

// なお、割引が適用される単位を超えて買った場合、割引が適用される単位に達しない分は割引かれません。たとえば、A 店で 12 袋買ったときは、10 袋分が 20% 引きで残りの 2 袋は定価になります。したがって、購入金額は (380×10) × 0.8 + 380 × 2 = 3,800 円になります。

// 購入したいそば粉の量が与えられたとき、一番安くなる金額を出力するプログラムを作成してください。ただし、与えられた量とちょうど同じ量のそば粉を購入するものとします。

// Input
// 複数のデータセットが与えられます。各データセットとして、購入したいそば粉の量（整数）が１行に与えられます。 ただし、入力はグラム単位で 500 g から 5 kg (5000 g) まで 100 g 刻みとします。

// 入力は０を含む一行で終わります。データセットの数は 50 を超えません。

// Output
// 各データセットごとに、そば粉を購入する最低金額(整数)を１行に出力してください。

#include <bits/stdc++.h>
using namespace std;

int rec[100000];

int f(int n) {
    if (n < 0) return 1e9;
    if (n == 0) return 0;
    if (rec[n] != 0) return rec[n];
    int ans = 1e9;
    ans = min(ans, 380 + f(n - 200));
    ans = min(ans, 550 + f(n - 300));
    ans = min(ans, 850 + f(n - 500));
    ans = min(ans, 1520 + f(n - 1000));
    ans = min(ans, 1870 + f(n - 1200));
    ans = min(ans, 2244 + f(n - 1500));
    return rec[n] = ans;
}

int main() {
    int n;
    while (cin >> n) {
        if (n == 0) break;
        cout << f(n) << endl;
    }
    return 0;
}